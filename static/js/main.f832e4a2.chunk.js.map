{"version":3,"sources":["Images/COVID-19.jpg","Components/Header.js","Components/StatsBox.js","Components/StatsBoxVaccine.js","Components/CountryInfo.js","Components/LineGraph.js","Components/TableData.js","Components/World_Summary.js","Components/Map.js","App.js","index.js"],"names":["Header","className","src","covid","StatsBox","title","id","cases","total","handleClick","setHandleClick","Card","onClick","console","log","CardContent","Typography","color","numeral","format","StatsBoxVaccine","vaccinationData","Object","keys","lastDayVaccine","CountryInfo","name","flag","continent","updated","alt","moment","LineGraph","props","country","useState","lineData","setLineData","fixedData","lastDatapoint","casesType","lineChartData","date","newDataPoint","x","y","push","useEffect","a","fetch","then","response","json","data","timeline","fetchGraphData","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","length","datasets","backgroundColor","borderColor","TableData","tableData","setTableData","map","fetchTableData","c","Numeral","WorldSummary","globalData","setGlobalData","fetchGlobalData","todayCases","recovered","todayRecovered","deaths","todayDeaths","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","SetViewOnClick","center","useMap","setView","getZoom","Marker","prototype","MapData","countries","active","critical","zoom","population","MapContainer","TileLayer","url","attribution","position","Popup","App","setCountries","setCountry","countryInfo","setCountryInfo","setVaccinationData","lat","lng","setCenter","setZoom","mapCountries","setMapCountries","iso3","_id","fetchCountries","onCountryChange","e","selectedCountry","target","long","requestVaccineData","FormControl","Select","variant","onChange","MenuItem","ReactDOM","render","document","getElementById"],"mappings":"mUAAe,G,MAAA,IAA0B,sC,OCe1BA,EAXA,WACf,OACQ,sBAAKC,UAAU,cAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKC,IAAKC,MAEd,sD,mDCgBOC,MArBf,YAA2E,IAAxDC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,eAUrD,OACE,cAACC,EAAA,EAAD,CAAMC,QATY,WACpBF,EAAeJ,GACfO,QAAQC,IAAIL,IAOV,SACC,eAACM,EAAA,EAAD,CAAad,UAAWK,EAAxB,UACK,cAACU,EAAA,EAAD,CAAYf,UAAU,kBAAkBgB,MAAM,gBAA9C,SAA+DZ,IAC/D,oBAAIJ,UAAU,kBAAd,SAAiCiB,IAAQX,GAAOY,OAAO,UACvD,eAACH,EAAA,EAAD,CAAYf,UAAU,kBAAkBgB,MAAM,gBAA9C,mBAAqEC,IAAQV,GAAOW,OAAO,gBCIxFC,MApBf,YAA2D,IAAjCf,EAAgC,EAAhCA,MAAcgB,GAAkB,EAAzBd,MAAyB,EAAlBc,iBACtCR,QAAQC,IAAIO,GACZR,QAAQC,IAAIO,EAAgBC,OAAOC,KAAKF,GAAiB,KACzDR,QAAQC,IAAIO,EAAgBC,OAAOC,KAAKF,GAAiB,KACzDR,QAAQC,IAAIO,EAAgBC,OAAOC,KAAKF,GAAiB,KAEzD,IAAMG,EAAiBH,EAAgBC,OAAOC,KAAKF,GAAiB,IAAMA,EAAgBC,OAAOC,KAAKF,GAAiB,IAGrH,OAFFR,QAAQC,IAAIU,GAGR,cAACb,EAAA,EAAD,UACC,eAACI,EAAA,EAAD,CAAad,UAAU,aAAvB,UACK,cAACe,EAAA,EAAD,CAAYf,UAAU,kBAAkBgB,MAAM,gBAA9C,SAA+DZ,IAC/D,oBAAIJ,UAAU,kBAAd,SAAiCiB,IAAQM,GAAgBL,OAAO,UAChE,eAACH,EAAA,EAAD,CAAYf,UAAU,kBAAkBgB,MAAM,gBAA9C,mBAAqEC,IAAQG,EAAgBC,OAAOC,KAAKF,GAAiB,KAAKF,OAAO,gB,0BCMnIM,MAnBf,YAAwD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QACzC,OACI,8BACI,cAAClB,EAAA,EAAD,CAAMV,UAAU,cAAhB,SACI,eAACc,EAAA,EAAD,CAAad,UAAU,2BAAvB,UACD,6BAAKyB,GAAc,gBACnB,8BACA,qBAAKI,IAAI,OAAO5B,IAAKyB,MAErB,cAACX,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SACCW,GAAwB,SAEzB,eAACZ,EAAA,EAAD,CAAYC,MAAM,gBAAgBhB,UAAU,YAA5C,sBAAkE8B,IAAOF,GAASV,OAAO,mC,eC2GzFa,MAvHf,SAAmBC,GAEnB,IAAMC,EAAUD,EAAMC,QAChBzB,EAAcwB,EAAMxB,YAE1BI,QAAQC,IAAIL,GACZI,QAAQC,IAAIoB,GANc,MAOUC,mBAAS,IAPnB,mBAOfC,EAPe,KAOLC,EAPK,KAUhBC,EAAY,SAACF,GAAiC,IAE5CG,EAFqBC,EAAsB,uDAAZ,QAC/BC,EAAgB,GAEpB,IAAK,IAAIC,KAAQN,EAAS7B,MAAO,CAC7B,GAAIgC,EAAe,CACf,IAAII,EAAe,CACfC,EAAGF,EACHG,EAAGT,EAASI,GAAWE,GAAQH,GAEnCE,EAAcK,KAAKH,GAGvBJ,EAAgBH,EAASI,GAAWE,GAExC,OAAOD,GAKZ5B,QAAQC,IAAIoB,GACZrB,QAAQC,IAAImB,EAAMxB,aAEjBsC,qBAAU,YACc,uCAAG,sBAAAC,EAAA,sEAGbC,MAAM,6CAAD,OAA8Cf,EAA9C,iBACVgB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHxC,QAAQC,IAAIuC,EAAKnB,SACjBrB,QAAQC,IAAIoB,GACZ,IAAIO,EAAgBH,EAAUe,EAAKC,SAAU7C,GAC7C4B,EAAYI,MATG,OAanB5B,QAAQC,IAAIsB,GAbO,2CAAH,qDAetBmB,KACC,CAACrB,EAASzB,IAEbI,QAAQC,IAAIoB,GAEZ,IAAMsB,EAAU,CACZC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRC,MAAO,CACLC,OAAQ,IAGZC,qBAAqB,EACrBC,SAAU,CACRC,KAAM,QACNC,WAAW,EACXC,UAAW,CACTC,MAAO,SAAUC,EAAaf,GAC5B,OAAOnC,IAAQkD,EAAYC,OAAOlD,OAAO,WAI/CmD,OAAQ,CACNC,MAAO,CACL,CACEC,KAAM,OACNC,KAAM,CACJtD,OAAQ,WACRuD,cAAe,QAIrBC,MAAO,CACL,CACEC,UAAW,CACTlB,SAAS,GAEXmB,MAAO,CAELC,SAAU,SAAUT,EAAOU,EAAOC,GAChC,OAAO9D,IAAQmD,GAAOlD,OAAO,YAO3C,OACI,sBAAKlB,UAAU,YAAf,UACA,gDAAmBQ,EAAnB,YACS,OAAR2B,QAAQ,IAARA,OAAA,EAAAA,EAAU6C,QAAS,GAChB,cAAC,OAAD,CAAM5B,KAAM,CACR6B,SAAU,CAAC,CACPC,gBAAiB,uBACjBC,YAAa,UACbjB,MAAM,GAAD,OAAK1D,EAAL,6BACL4C,KAAMjB,KAIdoB,QAASA,Q,OCjDN6B,MA5Df,WAAsB,IAAD,EAEiBlD,mBAAS,IAF1B,mBAEVmD,EAFU,KAECC,EAFD,KAkCjB,OA7BAxC,qBAAU,YAEU,uCAAG,sBAAAC,EAAA,sEACjBC,MAAM,uDACZC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACJ,IAAMiC,EAAYjC,EAAKmC,KAAI,SAACtD,GAAD,MAAc,CAEhCA,QAASA,EAAQA,QACjB3B,MAAO2B,EAAQ3B,UAKrBgF,EAAaD,MAZK,2CAAH,qDAiBrBG,KACA,IAUK,sBAAKxF,UAAU,QAAf,UACA,uDACA,kCACE,gCAEC,6BACIqF,EAAUE,KAAI,SAACE,GACZ,OAAO,qBAAIzF,UAAU,YAAd,UAA0B,6BAAKyF,EAAExD,UAAa,6BAAKyD,IAAQD,EAAEnF,OAAOY,OAAO,mBAQ5F,iC,OCUOyE,MA5Df,WAAyB,IAAD,EACazD,mBAAS,IADtB,mBAChB0D,EADgB,KACJC,EADI,KAmBpB,OAhBH/C,qBAAU,YAEc,uCAAG,sBAAAC,EAAA,sEAClBC,MAAM,oCACZC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEFyC,EAAczC,MALM,OAOrBxC,QAAQC,IAAI+E,GAPS,2CAAH,qDAUtBE,KACA,IAIK,sBAAK9F,UAAU,iBAAf,UACA,iEACA,sBAAKA,UAAU,0BAAf,UACI,cAACU,EAAA,EAAD,CAAMV,UAAU,uBAAhB,SACA,eAACc,EAAA,EAAD,CAAad,UAAU,QAAvB,UACA,cAACe,EAAA,EAAD,CAAaC,MAAM,gBAAnB,oBACI,6BAAK0E,IAAQE,EAAWtF,OAAOY,OAAO,SACtC,eAACH,EAAA,EAAD,CAAYC,MAAM,gBAAlB,cAAoC0E,IAAQE,EAAWG,YAAY7E,OAAO,eAI9E,cAACR,EAAA,EAAD,UACA,eAACI,EAAA,EAAD,CAAad,UAAU,YAAvB,UACA,cAACe,EAAA,EAAD,CAAaC,MAAM,gBAAnB,uBACA,6BAAK0E,IAAQE,EAAWI,WAAW9E,OAAO,SAC1C,eAACH,EAAA,EAAD,CAAYC,MAAM,gBAAlB,cAAoC0E,IAAQE,EAAWK,gBAAgB/E,OAAO,eAIjF,cAACR,EAAA,EAAD,UACA,eAACI,EAAA,EAAD,CAAad,UAAU,SAAvB,UACA,cAACe,EAAA,EAAD,CAAaC,MAAM,gBAAnB,oBACA,oCAAO0E,IAAQE,EAAWM,QAAQhF,OAAO,UACzC,eAACH,EAAA,EAAD,CAAaC,MAAM,gBAAnB,cAAqC0E,IAAQE,EAAWO,aAAajF,OAAO,sB,gHCxCjFkF,EAAcC,IAAEC,KAAK,CACvBC,QAAS,8GACTC,UAAWC,IACXC,SAAU,CAAC,GAAG,IACdC,WAAY,CAAC,GAAG,MAOlB,SAASC,EAAT,GAAqC,IAAXC,EAAU,EAAVA,OAClBtB,EAAMuB,cAGZ,OAFAvB,EAAIwB,QAAQF,EAAQtB,EAAIyB,WAEjB,KARTX,IAAEY,OAAOC,UAAU3D,QAAQ+C,KAAOF,EAYlC,IAyBee,EAzBC,SAAC,GAAgF,IAA/EC,EAA8E,EAA9EA,UAAW5G,EAAmE,EAAnEA,YAAa6G,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,SAAU7F,EAAoC,EAApCA,KAAMoF,EAA8B,EAA9BA,OAAQU,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAG5E,OAFA5G,QAAQC,IAAIuG,GACZxG,QAAQC,IAAIL,GAER,qBAAKR,UAAU,MAAf,SACA,eAACyH,EAAA,EAAD,CAAcZ,OAAQA,EAAQU,KAAMA,EAApC,UACH,cAACG,EAAA,EAAD,CACDC,IAAI,qDACJC,YAAY,2EAEd,cAACX,EAAA,EAAD,CAAQY,SAAUhB,EAAlB,SACE,eAACiB,EAAA,EAAD,WACC,2CAAcrG,KADf,IAC0B,uBACzB,8CAAiBiE,IAAQ8B,GAAYtG,OAAO,EAAE,MAF/C,KAEyD,uBACxD,gDAAmBwE,IAAQ2B,GAAQnG,OAAO,EAAE,MAH7C,KAGuD,uBACtD,4CAAewE,IAAQ4B,GAAUpG,OAAO,EAAE,WAI7C,cAAC0F,EAAD,CAAgBC,OAAQA,UCwHXkB,MAxJf,WAAe,MAEqB7F,mBAAS,IAF9B,mBAENkF,EAFM,KAEKY,EAFL,OAGiB9F,mBAAS,OAH1B,mBAGND,EAHM,KAGGgG,EAHH,OAIyB/F,mBAAS,CAC7CD,QAAS,cACTiG,YAAY,CACVxG,KAAM,gDAPG,mBAINwG,EAJM,KAIOC,EAJP,OASiCjG,mBAAS,IAT1C,mBASNd,EATM,KASWgH,EATX,OAUyBlG,mBAAS,SAVlC,mBAUN1B,EAVM,KAUOC,EAVP,OAWeyB,mBAAS,CAACmG,IAAI,GAAIC,KAAM,UAXvC,mBAWNzB,EAXM,KAWE0B,EAXF,OAYWrG,mBAAS,GAZpB,mBAYNqF,EAZM,KAYAiB,EAZA,OAa2BtG,mBAAS,IAbpC,mBAaNuG,EAbM,KAaQC,EAbR,KAiBX9H,QAAQC,IAAIL,GACZI,QAAQC,IAAIqH,GAIdpF,qBAAU,YACY,uCAAG,sBAAAC,EAAA,sEACjBC,MAAM,2FACZC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACNxC,QAAQC,IAAIuC,GACV,IAAMgE,EAAYhE,EAAKmC,KAAI,SAACtD,GAAD,MAAc,CAEhCA,QAASA,EAAQA,QACjBmC,MAAOnC,EAAQiG,YAAYS,KAC3BtI,GAAI4B,EAAQiG,YAAYU,IACxBlH,KAAMO,EAAQiG,YAAYxG,KAC1BE,QAAQK,EAAQL,YAGtBoG,EAAaZ,GACbsB,EAAgBtF,GAChBxC,QAAQC,IAAIuG,MAhBM,2CAAH,qDAoBrByB,KACA,IAID,IAAMC,EAAe,uCAAG,WAAOC,GAAP,iBAAAhG,EAAA,6DACdiG,EAAkBD,EAAEE,OAAO7E,MAC3BuD,EAA0B,cAApBqB,EAAkC,mCAAlC,iDAAiHA,EAAjH,gBAFQ,SAIdhG,MAAM2E,GACX1E,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GACF6E,EAAWe,GACXb,EAAe/E,GACfxC,QAAQC,IAAIuC,GACZxC,QAAQC,IAAIuC,EAAKnB,SACXrB,QAAQC,IAAI8G,GAElBY,EAAU,CAACF,IAAKjF,EAAK8E,YAAYG,IAAKC,IAAKlF,EAAK8E,YAAYgB,OAC5DV,EAAQ,MAdQ,OAkBzB5H,QAAQC,IAAIqH,GAlBa,+BAAAnF,EAAA,MAqBO,sBAAAA,EAAA,sEACnBC,MAAM,6DAAD,OAA8DgG,EAA9D,gBACV/F,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJgF,EAAmBhF,EAAKC,aAJD,2CArBP,oDA6BpB8F,GA7BoB,2CAAH,sDAiCnB,OACI,sBAAKnJ,UAAU,MAAf,UACA,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,YAAf,UACA,cAACoJ,EAAA,EAAD,CAAapJ,UAAU,gBAAvB,SACA,eAACqJ,EAAA,EAAD,CAAQrJ,UAAU,wBAAwBsJ,QAAQ,WAAWlF,MAAOnC,EAASsH,SAAUT,EAAvF,UACA,cAACU,EAAA,EAAD,CAA0BpF,MAAM,YAAhC,sBAAc,aAEVgD,EAAU7B,KAAI,SAACtD,GACb,OAAO,cAACuH,EAAA,EAAD,CAAUpF,MAAOnC,EAAQmC,MAAzB,SAAiCnC,EAAQA,kBASpD,sBAAKjC,UAAU,yBAAf,UACA,cAAC,EAAD,CAAayB,KAAMyG,EAAYjG,QAASP,KAAMwG,EAAYA,YAAYxG,KAAQC,UAAWuG,EAAYvG,UAAWC,QAASsG,EAAYtG,UACrI,sBAAK5B,UAAU,WAAf,UACA,cAAC,EAAD,CAAUQ,YAAaA,EAAaC,eAAgBA,EAAgBT,UAAU,QAAQK,GAAG,QAAQD,MAAM,SAASE,MAAO4H,EAAYnC,WAAYxF,MAAO2H,EAAY5H,QAClK,cAAC,EAAD,CAAUE,YAAaA,EAAaC,eAAgBA,EAAgBL,MAAM,YAAYC,GAAG,YAAYC,MAAO4H,EAAYjC,eAAgB1F,MAAO2H,EAAYlC,YAC3J,cAAC,EAAD,CAAUxF,YAAaA,EAAaC,eAAgBA,EAAgBL,MAAM,SAASC,GAAG,SAASC,MAAO4H,EAAY/B,YAAa5F,MAAO2H,EAAYhC,SAClJ,cAAC,EAAD,CAAiB9F,MAAM,aAAagB,gBAAiBA,UAMrD,8BACE,cAAC,EAAD,CACCZ,YAAaA,EACb4G,UAAWqB,EACXhH,KAAMyG,EAAYjG,QAClBoF,OAAQa,EAAYb,OACpBC,SAAUY,EAAYZ,SACtBE,WAAYU,EAAYV,WACxBX,OAAQA,EACRU,KAAMA,MAOP,cAAC,EAAD,OAEJ,eAAC7G,EAAA,EAAD,CAAMV,UAAU,aAAhB,UACC,cAACc,EAAA,EAAD,UAGG,cAAC,EAAD,MAIH,cAACA,EAAA,EAAD,CAAad,UAAU,iBAAvB,SACA,cAAC,EAAD,CAAW6G,OAAQA,EAAQ5E,QAASA,EAASzB,YAAaA,gBCrJrEiJ,IAASC,OACP,8BACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f832e4a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/COVID-19.04145961.jpg\";","import React from 'react'\r\nimport covid from '../Images/COVID-19.jpg'\r\n\r\n\r\nconst Header = () => {\r\nreturn (\r\n        <div className=\"app__header\">\r\n          <div className=\"app__header__image\">\r\n            <img src={covid}></img>\r\n          </div>\r\n        <h3>Covid 19 Tracker</h3>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Card, CardContent, Typography} from '@material-ui/core'\r\nimport numeral from 'numeral'\r\nimport '../Styles/StatsBox.css'\r\n\r\nfunction StatsBox({title, id, cases, total, handleClick, setHandleClick}) {\r\n\r\n  const handleOnClick = () => {\r\n    setHandleClick(id)\r\n    console.log(handleClick)\r\n\r\n    \r\n    \r\n  }\r\n\r\n    return (\r\n      <Card onClick={handleOnClick}>\r\n       <CardContent className={id}>\r\n            <Typography className=\"statsBox__title\" color=\"textSecondary\">{title}</Typography>\r\n            <h2 className=\"statsBox__cases\">{numeral(cases).format(\"+0,0\")}</h2>\r\n            <Typography className=\"statsBox__total\" color=\"textSecondary\">Total {numeral(total).format('0,0')}</Typography>\r\n       </CardContent>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default StatsBox\r\n\r\n","import React, {useState} from 'react'\r\nimport { Card, CardContent, Typography} from '@material-ui/core'\r\nimport numeral from 'numeral'\r\n\r\nfunction StatsBoxVaccine({title, cases, vaccinationData}) {\r\n  console.log(vaccinationData)\r\n  console.log(vaccinationData[Object.keys(vaccinationData)[0]])\r\n  console.log(vaccinationData[Object.keys(vaccinationData)[1]])\r\n  console.log(vaccinationData[Object.keys(vaccinationData)[3]])\r\n\r\n  const lastDayVaccine = vaccinationData[Object.keys(vaccinationData)[2]] - vaccinationData[Object.keys(vaccinationData)[0]]\r\n  console.log(lastDayVaccine)\r\n\r\n    return (\r\n      <Card>\r\n       <CardContent className=\"vaccinated\">\r\n            <Typography className=\"statsBox__title\" color=\"textSecondary\">{title}</Typography>\r\n            <h2 className=\"statsBox__cases\">{numeral(lastDayVaccine).format(\"+0,0\")}</h2>\r\n            <Typography className=\"statsBox__total\" color=\"textSecondary\">Total {numeral(vaccinationData[Object.keys(vaccinationData)[0]]).format('0,0')}</Typography>\r\n       </CardContent>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default StatsBoxVaccine\r\n","import React from 'react'\r\nimport '../Styles/CountryInfo.css'\r\nimport { Card, CardContent, Typography } from '@material-ui/core'\r\nimport moment from 'moment';\r\n\r\nfunction CountryInfo({name, flag, continent, updated}) {\r\n    return (\r\n        <div>\r\n            <Card className=\"countryInfo\">\r\n                <CardContent className=\"countryInfo__cardContent\" >\r\n               <h2>{name ? name : 'Afghanistan'}</h2>\r\n               <div>\r\n               <img alt=\"flag\" src={flag}></img>\r\n               </div>\r\n               <Typography color=\"textSecondary\">\r\n               {continent ? continent : 'Asia'}\r\n               </Typography>\r\n               <Typography color=\"textSecondary\" className=\"timestamp\">Updated: {moment(updated).format('MMMM Do YYYY, h:mm:a')}</Typography>\r\n                </CardContent>\r\n        </Card>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CountryInfo\r\n","import React, { useState, useEffect} from 'react'\r\nimport { Line } from  'react-chartjs-2'\r\nimport numeral from 'numeral'\r\nimport '../Styles/LineGraph.css'\r\n\r\nfunction LineGraph(props) {\r\n\r\nconst country = props.country\r\nconst handleClick = props.handleClick\r\n\r\nconsole.log(handleClick)\r\nconsole.log(country)\r\n    const [lineData, setLineData] = useState({})\r\n\r\n\r\n    const fixedData = (lineData, casesType='cases') => {\r\n        let lineChartData = []\r\n        let lastDatapoint;\r\n        for (let date in lineData.cases) {\r\n            if (lastDatapoint) {\r\n                let newDataPoint = {\r\n                    x: date,\r\n                    y: lineData[casesType][date] - lastDatapoint\r\n                };\r\n                lineChartData.push(newDataPoint)\r\n            }\r\n\r\n            lastDatapoint = lineData[casesType][date]\r\n        }\r\n        return lineChartData\r\n    }\r\n\r\n    //https://disease.sh/v3/covid-19/historical/all?lastdays=90\r\n\r\n   console.log(country)\r\n   console.log(props.handleClick)\r\n\r\n    useEffect(() => {\r\n        const fetchGraphData = async () => {\r\n\r\n         \r\n            await fetch(`https://disease.sh/v3/covid-19/historical/${country}?lastdays=90`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(data.country)\r\n                console.log(country)\r\n                let lineChartData = fixedData(data.timeline, handleClick)\r\n                setLineData(lineChartData)\r\n\r\n            })\r\n\r\n            console.log(lineData)\r\n        }\r\n      fetchGraphData()\r\n    }, [country, handleClick])\r\n\r\n    console.log(country)\r\n   \r\n    const options = {\r\n        legend: {\r\n          display: true,\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n          },\r\n        },\r\n        maintainAspectRatio: false,\r\n        tooltips: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n          callbacks: {\r\n            label: function (tooltipItem, data) {\r\n              return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              type: \"time\",\r\n              time: {\r\n                format: \"MM/DD/YY\",\r\n                tooltipFormat: \"ll\",\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n              ticks: {\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value, index, values) {\r\n                  return numeral(value).format(\"0a\");\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    return (\r\n        <div className=\"lineGraph\">\r\n        <h4>Graph Showing {handleClick} data</h4>\r\n        {lineData?.length > 0 && (\r\n            <Line data={{\r\n                datasets: [{\r\n                    backgroundColor: 'rgba(204,16,52, 0.5)',\r\n                    borderColor: '#CC1034',\r\n                    label: `${handleClick} Increase In last 90 days`,\r\n                    data: lineData\r\n                }],\r\n               \r\n            }}\r\n            options={options}\r\n            />\r\n        )}\r\n        \r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n","import React, {useEffect, useState} from 'react'\r\nimport '../Styles/TableData.css'\r\nimport Numeral from 'numeral'\r\n\r\n\r\n\r\nfunction TableData() {\r\n\r\n    const [tableData, setTableData] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    const fetchTableData = async () => {\r\n    await fetch('https://disease.sh/v3/covid-19/countries?sort=cases')\r\n   .then((response) => response.json())\r\n   .then((data) => {\r\n      const tableData = data.map((country) => ({\r\n           \r\n               country: country.country,\r\n               cases: country.cases\r\n               \r\n               \r\n           \r\n           })); \r\n         setTableData(tableData)\r\n         \r\n       })\r\n\r\n   }\r\n   fetchTableData()\r\n}, []);\r\n\r\n      \r\n\r\n  \r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div className=\"table\">\r\n        <h4>Live Cases By Country</h4>\r\n        <table>\r\n          <thead>\r\n         \r\n           <tr>\r\n              {tableData.map((c) => {\r\n                  return <tr className=\"table_row\"><td>{c.country}</td><td>{Numeral(c.cases).format('0,0')}</td></tr>\r\n                         \r\n              })}\r\n            </tr>\r\n            \r\n         \r\n        \r\n        </thead>\r\n        <tbody>\r\n    \r\n           \r\n         </tbody>\r\n        </table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableData\r\n","import React, { useState, useEffect } from 'react'\r\nimport '../Styles/World_Summary.css'\r\nimport '../Styles/App.css'\r\nimport {CardContent,Card, Typography } from '@material-ui/core';\r\nimport Numeral from 'numeral'\r\n\r\nfunction WorldSummary() {\r\n const [globalData, setGlobalData] = useState([])\r\n  \r\n useEffect(() => {\r\n\r\n    const fetchGlobalData = async () => {\r\n    await fetch('https:disease.sh/v3/covid-19/all')\r\n   .then((response) => response.json())\r\n   .then((data) => {\r\n    \r\n        setGlobalData(data)\r\n       })\r\n       console.log(globalData) \r\n\r\n   }\r\n   fetchGlobalData()\r\n}, []);\r\n\r\n \r\n    return (\r\n        <div className=\"world__summary\">\r\n        <h3>Current Global Covid-19 Figures</h3>\r\n        <div className=\"world__summary__content\">\r\n            <Card className=\"world__summary__card\">\r\n            <CardContent className=\"cases\">\r\n            <Typography  color=\"textSecondary\"> Cases</Typography>\r\n                <h4>{Numeral(globalData.cases).format('0,0')}</h4> \r\n                <Typography color=\"textSecondary\">+{Numeral(globalData.todayCases).format('0,0')}</Typography>\r\n            </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n            <CardContent className=\"recovered\">\r\n            <Typography  color=\"textSecondary\">Recovered</Typography>\r\n            <h4>{Numeral(globalData.recovered).format('0,0')}</h4> \r\n            <Typography color=\"textSecondary\">+{Numeral(globalData.todayRecovered).format('0,0')}</Typography>\r\n            </CardContent>\r\n           </Card>\r\n\r\n         <Card>\r\n         <CardContent className=\"deaths\">\r\n         <Typography  color=\"textSecondary\">Deaths</Typography>\r\n         <h4>  {Numeral(globalData.deaths).format('0,0')}</h4> \r\n         <Typography  color=\"textSecondary\">+{Numeral(globalData.todayDeaths).format('0,0')}</Typography>\r\n\r\n         </CardContent>\r\n        </Card>\r\n\r\n\r\n       \r\n        \r\n       \r\n\r\n\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldSummary\r\n\r\n","import React from 'react'\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap, Circle } from 'react-leaflet'\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport '../Styles/Map.css'\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport Numeral from 'numeral'\r\nimport { casesTypeColors } from './utility';\r\n\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d1/Google_Maps_pin.svg/585px-Google_Maps_pin.svg.png',\r\n  shadowUrl: iconShadow,\r\n  iconSize: [25,41], \r\n  iconAnchor: [12,41]\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\n\r\n//FUNCTION UPDATES THE CENTER OF THE MAP AS WE CHANGE THE COUNTRY ON THE DROPDOWN\r\nfunction SetViewOnClick({ center }) {\r\n  const map = useMap();\r\n  map.setView(center, map.getZoom());\r\n\r\n  return null;\r\n}\r\n\r\n\r\nconst MapData = ({countries, handleClick, active, critical, name, center, zoom, population}) => {\r\n    console.log(countries)\r\n    console.log(handleClick)\r\n    return ( \r\n        <div className=\"map\">\r\n        <MapContainer center={center} zoom={zoom}>\r\n     <TileLayer\r\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n  />\r\n  <Marker position={center}>\r\n    <Popup>\r\n     <h3>Country: {name}</h3> <br></br>\r\n     <h4>Population: {Numeral(population).format(0,0)}</h4>  <br/>\r\n     <h4>Active Cases: {Numeral(active).format(0,0)}</h4>  <br/>\r\n     <h4>Critical: {Numeral(critical).format(0,0)}</h4>    \r\n    </Popup>\r\n    \r\n  </Marker>\r\n  <SetViewOnClick center={center} />\r\n</MapContainer>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default MapData;","import './Styles/App.css';\r\nimport React, {useState, useEffect} from 'react'\r\nimport Header from './Components/Header';\r\nimport StatsBox from './Components/StatsBox'  \r\nimport StatsBoxVaccine from './Components/StatsBoxVaccine'\r\nimport CountryInfo from './Components/CountryInfo'\r\nimport LineGraph from './Components/LineGraph'\r\nimport TableData from './Components/TableData'\r\nimport WorldSummary from './Components/World_Summary'\r\nimport { FormControl,CardContent,Card, Select, MenuItem } from '@material-ui/core';\r\nimport MapData from './Components/Map';\r\nimport \"leaflet/dist/leaflet.css\"\r\n\r\n\r\n\r\nfunction App() {\r\n//STATES\r\n  const [countries, setCountries] = useState([])\r\n  const [country, setCountry] = useState('AFG')\r\n  const [countryInfo, setCountryInfo] = useState({\r\n    country: 'Afghanistan',\r\n    countryInfo:{\r\n      flag: 'https://disease.sh/assets/img/flags/af.png'}\r\n    })\r\n  const [vaccinationData, setVaccinationData] = useState({})\r\n  const [handleClick, setHandleClick] = useState('cases')\r\n  const [center, setCenter] = useState({lat:30, lng: -40.4796})\r\n  const [zoom, setZoom] = useState(3)\r\n  const [mapCountries, setMapCountries] = useState([])\r\n\r\n \r\n\r\n    console.log(handleClick)\r\n    console.log(countryInfo)\r\n\r\n\r\n//USE EFFECT TO FETCH COUNTRIES\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n    await fetch('https://disease.sh/v3/covid-19/countries?yesterday=true&twoDaysAgo=false&allowNull=true')\r\n   .then((response) => response.json())\r\n   .then((data) => {\r\n    console.log(data)\r\n      const countries = data.map((country) => ({\r\n           \r\n               country: country.country,\r\n               value: country.countryInfo.iso3,\r\n               id: country.countryInfo._id,\r\n               flag: country.countryInfo.flag,\r\n               updated:country.updated\r\n           \r\n           })); \r\n         setCountries(countries)\r\n         setMapCountries(data)\r\n         console.log(countries)\r\n\r\n       })\r\n   }\r\n   fetchCountries()\r\n}, []);\r\n\r\n//SELECT FIELD COUNTRY TRIGGERS A FETCH REQUEST USING ISO3 CODE OF THE SELECTED COUNTRY\r\n\r\n  const onCountryChange = async (e) => {\r\n      const selectedCountry = e.target.value\r\n      const url = selectedCountry === 'worldwide' ? 'https:disease.sh/v3/covid-19/all' : `https:disease.sh/v3/covid-19/countries/${selectedCountry}?strict=true`\r\n\r\n      await fetch(url)\r\n      .then (response => response.json())\r\n      .then(data => {\r\n          setCountry(selectedCountry)\r\n          setCountryInfo(data)\r\n          console.log(data)\r\n          console.log(data.country)\r\n                console.log(url)\r\n\r\n          setCenter({lat: data.countryInfo.lat, lng: data.countryInfo.long})\r\n          setZoom(4)\r\n         \r\n })\r\n\r\n console.log(countryInfo)\r\n\r\n//FETCHING DATA FOR THE COUNTRIES VACCINE DATA\r\n      const requestVaccineData = async () => {\r\n        await fetch(`https://disease.sh/v3/covid-19/vaccine/coverage/countries/${selectedCountry}?lastdays=3`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setVaccinationData(data.timeline)\r\n        })\r\n        \r\n      }\r\n      requestVaccineData()\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"app\">\r\n        <Header/>\r\n        <div className=\"app__content\">\r\n          <div className=\"app__left\">\r\n          <FormControl className=\"app__dropdown\">\r\n          <Select className=\"app__dropdown__select\" variant=\"outlined\" value={country} onChange={onCountryChange}>\r\n          <MenuItem key=\"worldwide\" value=\"worldwide\">Worldwide</MenuItem>\r\n  \r\n             {countries.map((country) =>  { \r\n                return <MenuItem value={country.value}>{country.country}</MenuItem>\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n         \r\n         \r\n\r\n           \r\n        \r\n            <div className=\"countryInfo__container\">\r\n            <CountryInfo name={countryInfo.country} flag={countryInfo.countryInfo.flag}   continent={countryInfo.continent} updated={countryInfo.updated}/>\r\n            <div className=\"statsBox\">\r\n            <StatsBox handleClick={handleClick} setHandleClick={setHandleClick} className=\"cases\" id=\"cases\" title=\" Cases\" cases={countryInfo.todayCases} total={countryInfo.cases}/>\r\n            <StatsBox handleClick={handleClick} setHandleClick={setHandleClick} title=\"Recovered\" id=\"recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}/>\r\n            <StatsBox handleClick={handleClick} setHandleClick={setHandleClick} title=\"Deaths\" id=\"deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\r\n            <StatsBoxVaccine title=\"Vaccinated\" vaccinationData={vaccinationData}/>\r\n          </div>\r\n            </div>\r\n           \r\n         \r\n\r\n            <div>\r\n              <MapData\r\n               handleClick={handleClick}\r\n               countries={mapCountries}\r\n               name={countryInfo.country}\r\n               active={countryInfo.active} \r\n               critical={countryInfo.critical}\r\n               population={countryInfo.population} \r\n               center={center} \r\n               zoom={zoom}/>\r\n\r\n              </div>\r\n           \r\n\r\n           \r\n              \r\n              <WorldSummary/> \r\n          </div>\r\n          <Card className=\"app__right\">\r\n           <CardContent>\r\n          \r\n  \r\n              <TableData />\r\n           \r\n           \r\n           </CardContent>\r\n           <CardContent className=\"lineGraph_Card\">\r\n           <LineGraph center={center} country={country} handleClick={handleClick}/>\r\n           </CardContent>\r\n          </Card>\r\n          </div>\r\n      \r\n        </div>\r\n\r\n\r\n\r\n     \r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <App />\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}